package com.codeWithMosh.store;

import com.codeWithMosh.store.entities.*;
import com.codeWithMosh.store.repositories.UserRepository;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.context.ApplicationContext;
import org.springframework.context.ConfigurableApplicationContext;

@SpringBootApplication
public class StoreApplication {

	public static void main(String[] args) {
		ApplicationContext context = SpringApplication.run(StoreApplication.class, args);

		// We have not generated the class for UserRepository yet, it's an interface.
		// The actual class for it will be generated by spring at runtime.
		var repository = context.getBean(UserRepository.class);

		// Create a user
		User user2 = User.builder()
				.name("John Doe")
				.password("password")
				.email("john@gmai.com")
				.build();

		// Save the user in the db
		repository.save(user2);

		// Fetch the user by Id
//		User user = repository.findById(1L).orElseThrow();

		// Uncommenting the next line will cause LazyInitializationException.
//		System.out.println(user);

//		System.out.println(user.getEmail());

		repository.findAll().forEach((User u) -> System.out.println(u.getId()));

		// Deletes
		repository.deleteAll();
	}

}
